#version 460

#extension GL_GOOGLE_cpp_style_line_directive : enable
#ifdef GL_GOOGLE_cpp_style_line_directive
#line 2 "blur.comp"
#endif

layout(binding = 0) uniform uniforms_buffer {
    vec2 size;
    vec4 map_size;
    int time;
};

layout(std430, binding = 1) buffer ant_buffer {
    vec2 ants[];
};

layout(binding = 2, R32F) uniform image2D map_a;
layout(binding = 3, R32F) uniform image2D map_b;

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

float lerp(float a, float b, float t)
{
    return t * a + (1.0 - t) * b;
}

void main() {
    ivec2 index = ivec2(gl_GlobalInvocationID.xy);
    float v = 0;
    const float high_w = 0.5;
    const float small_w = (1.0 - high_w) / 8.0;
    v += imageLoad(map_a, index + ivec2(-1, -1)).r * small_w;
    v += imageLoad(map_a, index + ivec2(0, -1)).r * small_w;
    v += imageLoad(map_a, index + ivec2(1, -1)).r * small_w;
    v += imageLoad(map_a, index + ivec2(-1, 0)).r * small_w;
    v += imageLoad(map_a, index + ivec2(0, 0)).r * high_w;
    v += imageLoad(map_a, index + ivec2(1, 0)).r * small_w;
    v += imageLoad(map_a, index + ivec2(-1, 1)).r * small_w;
    v += imageLoad(map_a, index + ivec2(0, 1)).r * small_w;
    v += imageLoad(map_a, index + ivec2(1, 1)).r * small_w;
    v = lerp(imageLoad(map_a, index).r, v, 0.25);
    imageStore(map_b, index, vec4(v));
}