#version 450

struct Particle {
    dvec3 pos;
    dvec3 vel;
    double mass;
};

uniform double dt = 0.1;

layout(std430, binding = 0) buffer Particles {
    Particle particles[];
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

const double G = 0.06;//6.67408e-11;

void main() {
    uint tid = gl_GlobalInvocationID.x;

    if (tid >= particles.length() || tid == particles.length() - 1)
        return;

    Particle p;
    dvec3 accel = dvec3(0.0, 0.0, 0.0);

    for (int i = 0; i < particles.length(); i++) {
        if (i == tid)
            continue;

        Particle other = particles[i];

        dvec3 dist = other.pos - p.pos;
        double r2 = dot(dist, dist);
        double r = sqrt(r2);

        double f = other.mass / (r2 * r);

        accel += G * f * dist;
    }

    p.vel += accel * dt;
    p.pos += p.vel * dt;

    particles[tid] = p;
}